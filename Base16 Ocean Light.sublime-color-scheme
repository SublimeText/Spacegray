{
	"name": "Base16 Ocean Light",
	"variables":
	{
		// additional variations
		"base-00": "rgb(28, 31, 38)",
		"base-01": "rgb(35, 40, 48)",

		// base16 color palette
		"base00": "rgb(43, 48, 59)",
		"base01": "rgb(52, 61, 70)",
		"base02": "rgb(79, 91, 102)",
		"base03": "rgb(101, 115, 126)",
		"base04": "rgb(167, 173, 186)",
		"base05": "rgb(192, 197, 206)",
		"base06": "rgb(223, 225, 232)",
		"base07": "rgb(239, 241, 245)",
		"base08": "rgb(191, 97, 106)",
		"base09": "rgb(208, 135, 112)",
		"base0A": "rgb(235, 203, 139)",
		"base0B": "rgb(163, 190, 140)",
		"base0C": "rgb(150, 181, 180)",
		"base0D": "rgb(143, 161, 179)",
		"base0E": "rgb(180, 142, 173)",
		"base0F": "rgb(171, 121, 103)",
		
		// ST ..ish color palette
		"--accent": "var(base08)",
		"--blueish": "var(base0D)",
		"--cyanish": "var(base0C)",
		"--greenish": "var(base0B)",
		"--orangish": "var(base09)",
		"--pinkish": "var(base0E)",
		"--purplish": "var(base0E)",
		"--redish": "var(base08)",
		"--yellowish": "var(base0A)",
	},    
	"globals":
	{
		"foreground": "var(base02)",
		"background": "var(base07)",
		"invisibles": "var(base06)",
		"fold_marker": "var(base05)",
		"shadow": "color(black alpha(10%))",
		"shadow_width": "4",

		// caret
		"caret": "var(base02)",
		
		// indent guides
		"active_guide": "var(base08)",
		"stack_guide": "var(base03)",
		"guide": "var(base05)",
		
		// gutter
		"gutter_foreground": "var(base05)",
		"gutter_foreground_highlight": "var(base02)",

		"line_highlight": "color(var(base03) alpha(10%))",

		// selections
		"selection": "var(base06)",
		"selection_border": "var(base05)",
		"selection_corner_style": "square",
	},
	"rules":
	[
		{
			"name": "Text",
			"scope": "variable.parameter.function",
			"foreground": "var(base02)"
		},
		{
			"name": "Comments",
			"scope": "comment, punctuation.definition.comment",
			"foreground": "var(base04)"
		},
		{
			"name": "Punctuation",
			"scope": "punctuation.definition.string, punctuation.definition.variable, punctuation.definition.string, punctuation.definition.parameters, punctuation.definition.string, punctuation.definition.array",
			"foreground": "var(base02)"
		},
		{
			"name": "Delimiters",
			"scope": "none",
			"foreground": "var(base02)"
		},
		{
			"name": "Operators",
			"scope": "keyword.operator",
			"foreground": "var(base02)"
		},
		{
			"name": "Keywords",
			"scope": "keyword, keyword.operator.logical.python",
			"foreground": "var(base0E)"
		},
		{
			"name": "Variables",
			"scope": "variable, variable.other.dollar.only.js",
			"foreground": "var(base08)"
		},
		{
			"name": "Functions",
			"scope": "entity.name.function, meta.require, support.function.any-method, variable.function",
			"foreground": "var(base0D)"
		},
		{
			"name": "Classes",
			"scope": "support.class, entity.name.class, entity.name.type.class",
			"foreground": "var(base09)"
		},
		{
			"name": "Classes",
			"scope": "meta.class",
			"foreground": "var(base01)"
		},
		{
			"name": "Methods",
			"scope": "keyword.other.special-method",
			"foreground": "var(base0D)"
		},
		{
			"name": "Storage",
			"scope": "storage",
			"foreground": "var(base0E)"
		},
		{
			"name": "Support",
			"scope": "support.function",
			"foreground": "var(base0C)"
		},
		{
			"name": "Strings, Inherited Class",
			"scope": "string, constant.other.symbol, entity.other.inherited-class",
			"foreground": "var(base0B)"
		},
		{
			"name": "Integers",
			"scope": "constant.numeric",
			"foreground": "var(base09)"
		},
		{
			"name": "Floats",
			"scope": "none",
			"foreground": "var(base09)"
		},
		{
			"name": "Boolean",
			"scope": "none",
			"foreground": "var(base09)"
		},
		{
			"name": "Constants",
			"scope": "constant",
			"foreground": "var(base09)"
		},
		{
			"name": "Tags",
			"scope": "entity.name.tag",
			"foreground": "var(base08)"
		},
		{
			"name": "Attributes",
			"scope": "entity.other.attribute-name",
			"foreground": "var(base09)"
		},
		{
			"name": "Attribute IDs",
			"scope": "entity.other.attribute-name.id, punctuation.definition.entity",
			"foreground": "var(base0D)"
		},
		{
			"name": "Selector",
			"scope": "meta.selector",
			"foreground": "var(base0E)"
		},
		{
			"name": "Values",
			"scope": "none",
			"foreground": "var(base09)"
		},
		{
			"name": "Headings",
			"scope": "markup.heading punctuation.definition.heading, entity.name.section",
			"foreground": "var(base0D)"
		},
		{
			"name": "Units",
			"scope": "keyword.other.unit",
			"foreground": "var(base09)"
		},
		{
			"name": "Bold",
			"scope": "markup.bold, punctuation.definition.bold",
			"foreground": "var(base09)",
			"font_style": "bold"
		},
		{
			"name": "Italic",
			"scope": "markup.italic, punctuation.definition.italic",
			"foreground": "var(base0E)",
			"font_style": "italic"
		},
		{
			"name": "Code",
			"scope": "markup.raw.inline",
			"foreground": "var(base0B)"
		},
		{
			"name": "Link Text",
			"scope": "string.other.link",
			"foreground": "var(base08)"
		},
		{
			"name": "Link Url",
			"scope": "meta.link",
			"foreground": "var(base09)"
		},
		{
			"name": "Image Url",
			"scope": "meta.image",
			"foreground": "var(base09)"
		},
		{
			"name": "Lists",
			"scope": "markup.list",
			"foreground": "var(base08)"
		},
		{
			"name": "Quotes",
			"scope": "markup.quote",
			"foreground": "var(base09)"
		},
		{
			"name": "Separator",
			"scope": "meta.separator",
			"foreground": "var(base02)",
			"background": "var(base06)"
		},
		{
			"name": "Inserted",
			"scope": "markup.inserted",
			"foreground": "var(base0B)"
		},
		{
			"name": "Deleted",
			"scope": "markup.deleted",
			"foreground": "var(base08)"
		},
		{
			"name": "Changed",
			"scope": "markup.changed",
			"foreground": "var(base0E)"
		},
		{
			"name": "Ignored",
			"scope": "markup.ignored",
			"foreground": "var(base05)"
		},
		{
			"name": "Untracked",
			"scope": "markup.untracked",
			"foreground": "var(base05)"
		},
		{
			"name": "Colors",
			"scope": "constant.other.color",
			"foreground": "var(base0C)"
		},
		{
			"name": "Regular Expressions",
			"scope": "string.regexp",
			"foreground": "var(base0C)"
		},
		{
			"name": "Escape Characters",
			"scope": "constant.character.escape",
			"foreground": "var(base0C)"
		},
		{
			"name": "Embedded",
			"scope": "punctuation.section.embedded, variable.interpolation",
			"foreground": "var(base0F)",
		},
		{
			"name": "Invalid",
			"scope": "invalid.illegal",
			"foreground": "var(base07)",
			"background": "var(base08)"
		}
	]
}